.ns("frontend.components.pieces.modal", {
  .ui("dialog", {
    @dialog-padding: 15px;

    background-color: @white;
    border-radius: 3px;

    > .header {
      .flexy(row, space-between);

      padding: @dialog-padding;

      border-bottom: 1px solid @grayLighter;
      background: @grayLightest;
      border-radius: 3px 3px 0 0;

      > .close-button {
        padding-top: 6px;
        font-size: @fontSizeLarger;
        cursor: pointer;
      }

      // As of this writing, an upstream .title selector bleeds into this
      // component, so we need a more specific name. This should become
      // .title when it\'s free again.
      > .modal-component-title {
        font-size: @fontSizeLarge;
        line-height: 1.5;
        padding-top: 2px;
      }
    }

    > .body {
      padding: @dialog-padding;
    }

    > .actions {
      display: flex;
      padding: @dialog-padding;
      justify-content: flex-end;
      border-top: 1px solid @grayLightest;

      > .action {
        margin-right: @dialog-padding;

        &:last-child {
          margin-right: 0;
        }
      }
    }
  });

  .ui("modal", {}, {
    .el("modal", {
      // This element provides the screen behind the modal box (and contains
      // everything).

      // This element takes over the entire screen, so visually it lives at a
      // "top-level" context, but technically it might be the child of any node
      // in the DOM. Therefore, we have to reset some styles that we may be
      // inheriting from wherever the modal component is mounted.
      font-family: @sansSerifFontFamily;
      font-size: @baseFontSize;
      line-height: @baseLineHeight;
      text-align: left;

      .flexy();

      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;

      // Modals scroll on small screens.
      overflow: auto;

      // On WebKit touch devices, scroll an oversized modal with momentum.
      -webkit-overflow-scrolling: touch;

      background-color: fade(@black, 50%);

      // The modal box itself.
      > .box {
        // The modal box is 700px wide, but shrinks to the width of the
        // viewport.
        flex: 0 1 700px;

        // It\'s centered in both directions.
        margin: auto;

        background-color: @white;
        box-shadow: 0 0 10px fade(@black, 50%);
        border-radius: 3px;
      }


      // Transitions

      &.modal-appear,
      &.modal-enter {
        @bg-fade-in-duration: 0.2s;

        // When the modal enters, first fade in the dark background...
        transition: background-color @bg-fade-in-duration linear;

        // ...then fly in the modal box.
        > .box {
          transition: transform 0.2s ease-out @bg-fade-in-duration;
        }
      }

      &.modal-appear:not(.modal-appear-active),
      &.modal-enter:not(.modal-enter-active) {
        background-color: transparent;

        > .box {
          transform: ~'translateY(calc(-50vh - 50%))';
        }
      }

      &.modal-leave {
        // When the modal leaves, fade out the background...
        transition: background-color 0.2s linear;

        // ...and fly out the modal box simultaneously.
        > .box {
          transition: transform 0.2s ease-in;
        }
      }

      &.modal-leave.modal-leave-active {
        background-color: transparent;

        > .box {
          transform: ~'translateY(calc(-50vh - 50%))';
        }
      }
    });
  });
});
